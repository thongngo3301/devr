Started by GitHub push by thongngo3301
Obtained Jenkinsfile from git https://github.com/thongngo3301/pastebin
[Pipeline] Start of Pipeline
[Pipeline] node
Running on devr in /home/deployer/workspace/Devr/Devr-pastebin
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
Cloning the remote Git repository
Avoid second fetch
Checking out Revision f855eef1d5505e4cf2e464e5df126b7052e68aad (origin/master)
Commit message: "update Jenkinsfile"
Cloning repository https://github.com/thongngo3301/pastebin
 > git init /home/deployer/workspace/Devr/Devr-pastebin # timeout=10
Fetching upstream changes from https://github.com/thongngo3301/pastebin
 > git --version # timeout=10
 > git --version # 'git version 2.34.1'
 > git fetch --tags --force --progress -- https://github.com/thongngo3301/pastebin +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/thongngo3301/pastebin # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse origin/master^{commit} # timeout=10
 > git config core.sparsecheckout # timeout=10
 > git checkout -f f855eef1d5505e4cf2e464e5df126b7052e68aad # timeout=10
 > git rev-list --no-walk 11960146f5f4500eabbbd4dbe3980762ceaef7cd # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
Fetching changes from the remote Git repository
Checking out Revision f855eef1d5505e4cf2e464e5df126b7052e68aad (origin/master)
Commit message: "update Jenkinsfile"
[Pipeline] sh
+ docker build -t thongngo3301/pastebin:latest .
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 544B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 58B done
#2 DONE 0.0s

#3 [auth] library/debian:pull token for registry-1.docker.io
#3 DONE 0.0s

#4 [auth] rustlang/rust:pull token for registry-1.docker.io
#4 DONE 0.0s

#5 [internal] load metadata for docker.io/rustlang/rust:nightly
#5 DONE 0.1s

#6 [internal] load metadata for docker.io/library/debian:buster-slim
#6 DONE 0.1s

#7 [builder 1/9] FROM docker.io/rustlang/rust:nightly@sha256:9bcf393e073cbe3780315a9911fe6ca043e15b413eda70ca5aeebd3e1f4a66d3
#7 DONE 0.0s

#8 [stage-1 1/2] FROM docker.io/library/debian:buster-slim@sha256:fac2ae50be3f4e0901582e5c0ef00d06b1f599315a2077ab5b8ea7e304ddbee4
#8 DONE 0.0s

#9 [internal] load build context
#9 transferring context: 554.97kB done
#9 DONE 0.0s

#10 [builder 7/9] COPY ./static ./static
#10 CACHED

#11 [builder 6/9] COPY ./api.fbs ./api.fbs
#11 CACHED

#12 [builder 9/9] RUN cargo install --path .
#12 CACHED

#13 [builder 5/9] COPY ./Cargo.toml ./Cargo.toml
#13 CACHED

#14 [builder 8/9] COPY ./src ./src
#14 CACHED

#15 [builder 3/9] RUN bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
#15 CACHED

#16 [builder 2/9] RUN apt-get update && apt-get install -y apt-utils software-properties-common lsb-release
#16 CACHED

#17 [builder 4/9] WORKDIR /usr/src/pastebin
#17 CACHED

#18 [stage-1 2/2] COPY --from=builder /usr/local/cargo/bin/pastebin /usr/local/bin/pastebin
#18 CACHED

#19 exporting to image
#19 exporting layers done
#19 writing image sha256:8e7a4070673315c051e0723ab5505cfff1142de550449d8d09a2a0388ade904b done
#19 naming to docker.io/thongngo3301/pastebin:latest done
#19 DONE 0.0s
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Push)
[Pipeline] withCredentials
Masking supported pattern matches of $DOCKER_PASSWORD
[Pipeline] {
[Pipeline] sh
Warning: A secret was passed to "sh" using Groovy String interpolation, which is insecure.
		 Affected argument(s) used the following variable(s): [DOCKER_PASSWORD]
		 See https://jenkins.io/redirect/groovy-string-interpolation for details.
 > git rev-parse --resolve-git-dir /home/deployer/workspace/Devr/Devr-pastebin/.git # timeout=10
 > git config remote.origin.url https://github.com/thongngo3301/pastebin # timeout=10
Fetching upstream changes from https://github.com/thongngo3301/pastebin
 > git --version # timeout=10
 > git --version # 'git version 2.34.1'
 > git fetch --tags --force --progress -- https://github.com/thongngo3301/pastebin +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse origin/master^{commit} # timeout=10
 > git config core.sparsecheckout # timeout=10
 > git checkout -f f855eef1d5505e4cf2e464e5df126b7052e68aad # timeout=10
+ docker login -u thongngo3301 -p ****
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
WARNING! Your password will be stored unencrypted in /home/deployer/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
+ docker push thongngo3301/pastebin:latest
The push refers to repository [docker.io/thongngo3301/pastebin]
a97e0f25e73d: Preparing
63b3cf45ece8: Preparing
63b3cf45ece8: Layer already exists
a97e0f25e73d: Layer already exists
latest: digest: sha256:43f3ee7365ce0830987fdf0b9e0e263ffb038be7bf8683744821808511f7fa7b size: 740
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ docker-compose rm -f
No stopped containers
+ docker-compose pull
The URI variable is not set. Defaulting to a blank string.
Pulling pastebin ...
Pulling nginx    ...
Pulling pastebin ... pulling from thongngo3301/pastebin
Pulling pastebin ... digest: sha256:43f3ee7365ce083098...
Pulling pastebin ... status: image is up to date for t...
Pulling pastebin ... done
Pulling nginx    ... pulling from library/nginx
Pulling nginx    ... digest: sha256:6650513efd1d27c1f8...
Pulling nginx    ... status: image is up to date for n...
Pulling nginx    ... done
+ URI=http://localhost docker-compose up --build --force-recreate -d
Recreating pastebin ...
Recreating pastebin ... done
Recreating devr-pastebin_nginx_1 ...
Recreating devr-pastebin_nginx_1 ... done
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ /home/deployer/venv/bin/python3 tests/main.py http://ec2-3-239-51-189.compute-1.amazonaws.com
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] cleanWs
[WS-CLEANUP] Deleting project workspace...
[WS-CLEANUP] Deferred wipeout is used...
[WS-CLEANUP] done
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS